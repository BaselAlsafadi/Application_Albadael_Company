import 'dart:convert';
import 'dart:io';
import 'package:albadael/Constant/api.dart';
import 'package:albadael/Constant/statusCode.dart';
import 'package:albadael/Models/About-Us/autogenerated_about-us.dart';
import 'package:albadael/Models/Home/autogenerated.dart';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'package:path_provider/path_provider.dart';

// Future<Autogenerated> readdata() async {
//   final response = await http.get(Uri.parse(API.publicAPI));
//   if (response.statusCode == StatusCode.statusCodeSuccess) {
//     return Autogenerated.fromJson(jsonDecode(response.body));
//   } else {
//     return throw Exception('Failed to load API Public');
//   }
// }

//// get data from api team///
// Future<Autogenerated_team> readdatateam() async {
//   final response = await http.get(Uri.parse(API.teamAPI));
//   if (response.statusCode == StatusCode.statusCodeSuccess) {
//     return Autogenerated_team.fromJson(jsonDecode(response.body));
//   } else {
//     throw Exception('Failed to load API Team');
//   }
// }

//// get image from locale storge api////

String frommater(String url) {
  return API.localStorgeAPI + url;
}

NetworkImage getimage(String name) {
// ignore: unnecessary_string_interpolations///
  final String url = frommater('$name');
  return NetworkImage(url);
}

////////////////////////////////////////////////////////////////////
// get data from api public
Future<Autogenerated?> getdatapublic() async {
  String fileName = "CacheData.json";
  var cacheDir = await getTemporaryDirectory();

  if (await File(cacheDir.path + "/" + fileName).exists()) {
    print("Loading from cache");
    //TOD0: Reading from the json File
    var jsonData = File(cacheDir.path + "/" + fileName).readAsStringSync();
    Autogenerated response = Autogenerated.fromJson(json.decode(jsonData));
    return response;
  } else {
    print("Loading from API");
    var response = await http.get(Uri.parse(API.HomeAPI));
    if (response.statusCode == StatusCode.statusCodeSuccess) {
      var jsonResponse = response.body;
      Autogenerated res = Autogenerated.fromJson(json.decode(jsonResponse));

      var tempDir = await getTemporaryDirectory();
      File file = new File(tempDir.path + "/" + fileName);
      file.writeAsString(jsonResponse, flush: true, mode: FileMode.write);

      return res;
    }
  }
}

//// get data from api team///
Future<Autogenerated_team?> getdatateam() async {
  String fileName = "CacheData2.json";
  var cacheDir = await getTemporaryDirectory();

  if (await File(cacheDir.path + "/" + fileName).exists()) {
    print("Loading from cache");
    //TOD0: Reading from the json File
    var jsonData = File(cacheDir.path + "/" + fileName).readAsStringSync();
    Autogenerated_team response =
        Autogenerated_team.fromJson(json.decode(jsonData));
    return response;
  } else {
    print("Loading from API");
    var response = await http.get(Uri.parse(API.AboutUsAPI));
    if (response.statusCode == StatusCode.statusCodeSuccess) {
      var jsonResponse = response.body;
      Autogenerated_team res =
          Autogenerated_team.fromJson(json.decode(jsonResponse));

      var tempDir = await getTemporaryDirectory();
      File file = new File(tempDir.path + "/" + fileName);
      file.writeAsString(jsonResponse, flush: true, mode: FileMode.write);

      return res;
    }
  }
}
