import 'package:albadael/Constant/api_connection.dart';
import 'package:albadael/Models/Home/autogenerated.dart';
import 'package:albadael/Widget/Public/appbarwidget.dart';
import 'package:albadael/Widget/Public/fab_message.dart';
import 'package:albadael/Widget/Public/title_name_screen.dart';
import 'package:flutter/material.dart';

class Blog extends StatefulWidget {
  const Blog({Key? key}) : super(key: key);

  @override
  _BlogState createState() => _BlogState();
}

class _BlogState extends State<Blog> {
  late Future<Autogenerated?> apiCall;

  @override
  void initState() {
    super.initState();
    apiCall = getdatapublic();
  }

  @override
  Widget build(BuildContext context) {
    return FutureBuilder<Autogenerated?>(
        future: apiCall,
        builder: (context, snapshot) {
          if (snapshot.hasData) {
            return Scaffold(
              appBar: AppBarWidget(),
              body: SingleChildScrollView(
                  physics: ScrollPhysics(),
                  child: Column(children: [
                    Title_name_screen(
                      title: 'Blog',
                    ),
                    Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: new ListView.builder(
                          physics: NeverScrollableScrollPhysics(),
                          primary: false,
                          shrinkWrap: true,
                          itemCount: snapshot.data!.data.post.length,
                          itemBuilder: (context, index) {
                            return Padding(
                              padding: const EdgeInsets.only(bottom: 15),
                              child: Card(
                                elevation: 4,
                                shape: RoundedRectangleBorder(
                                  borderRadius: BorderRadius.circular(12),
                                ),
                                child: Column(
                                  children: [
                                    Padding(
                                      padding: const EdgeInsets.only(
                                          left: 8, right: 8),
                                      child: Container(
                                        height:
                                            MediaQuery.of(context).size.height /
                                                3,
                                        decoration: BoxDecoration(
                                            image: DecorationImage(
                                                image: getimage(snapshot.data!
                                                    .data.post[index].cover))),
                                      ),
                                    ),
                                    Text(
                                      snapshot.data!.data.post[index].title,
                                      style: TextStyle(
                                          color: Color(0xff1daad2),
                                          fontWeight: FontWeight.bold),
                                    ),
                                    Padding(
                                      padding: const EdgeInsets.only(
                                          top: 12,
                                          bottom: 12,
                                          left: 5,
                                          right: 5),
                                      child: Text('This is simple post in app'
                                          // snapshot.data!.data.post[index].body
                                          //     .toString(),
                                          ),
                                    ),
                                    Container(
                                      decoration: BoxDecoration(
                                          color: Colors.grey[100],
                                          borderRadius: BorderRadius.only(
                                              bottomLeft: Radius.circular(12),
                                              bottomRight:
                                                  Radius.circular(12))),
                                      child: Padding(
                                        padding: EdgeInsets.all(8),
                                        child: Row(
                                          mainAxisAlignment:
                                              MainAxisAlignment.spaceAround,
                                          children: [
                                            Container(
                                                width: 25,
                                                height: 25,
                                                decoration: BoxDecoration(
                                                    image: DecorationImage(
                                                        image: AssetImage(
                                                            'assets/images/like.png')))),
                                            Container(
                                                width: 25,
                                                height: 25,
                                                decoration: BoxDecoration(
                                                    image: DecorationImage(
                                                        image: AssetImage(
                                                            'assets/images/comment.png')))),
                                            Row(children: [
                                              Padding(
                                                padding: const EdgeInsets.only(
                                                    right: 5),
                                                child: Container(
                                                    width: 25,
                                                    height: 25,
                                                    decoration: BoxDecoration(
                                                        image: DecorationImage(
                                                            image: AssetImage(
                                                                'assets/images/view.png')))),
                                              ),
                                              Text(
                                                snapshot.data!.data.post[index]
                                                    .views
                                                    .toString(),
                                                style: TextStyle(
                                                    fontWeight: FontWeight.bold,
                                                    color: Color(0xff1daad2)),
                                              ),
                                            ]),
                                          ],
                                        ),
                                      ),
                                    )
                                  ],
                                ),
                              ),
                            );
                          }),
                    ),
                  ])),
              floatingActionButton: ButtonContactUs(),
            );
          } else if (snapshot.hasError) {
            return Text('${snapshot.error}');
          }
          return Center(
              child: Container(
            height: MediaQuery.of(context).size.height / 50,
            width: MediaQuery.of(context).size.width / 4,
          ));
        });
  }
}
